/**
 * @license
 * canvas-pip-fullscreen
 * @author danrossi / https://github.com/danrossi
 * Copyright (c) 2017 Google
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var pip=function(e){"use strict";const t=new WeakMap;class i{constructor(){t.set(this,{})}on(e,i){const s=t.get(this);return s[e]||(s[e]=[]),s[e].push(i),this}once(e,t){const i=(...s)=>{this.off(e,i),t(...s)};return this.on(e,i),this}off(e,i){const s=t.get(this)[e];return s&&(null===i?s.length=0:s.splice(s.indexOf(i),1)),this}listeners(e){try{return t.get(this)[e]}catch(e){return null}}emit(e,...i){const s=t.get(this)[e];return s&&s.length?(s.forEach((t=>{t({type:e,target:this},...i)})),!0):this}emitAsync(e,...i){const s=t.get(this)[e],n=[];return s&&s.length&&s.forEach((t=>{n.push(t({type:e,target:this},...i))})),Promise.all(n)}}
/**
     * @license
     * pip-manager
     * @author danrossi / https://github.com/danrossi
     * Copyright (c) 2017 Google
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     * http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */const s=new WeakMap;class n{constructor(){s.set(this,{})}on(e,t){const i=s.get(this);return i[e]||(i[e]=[]),i[e].push(t),this}once(e,t){const i=(...s)=>{this.off(e,i),t(...s)};return this.on(e,i),this}off(e,t){const i=s.get(this)[e];return i&&(null===t?i.length=0:i.splice(i.indexOf(t),1)),this}listeners(e){try{return s.get(this)[e]}catch(e){return null}}emit(e,...t){const i=s.get(this)[e];return i&&i.length?(i.forEach((i=>{i({type:e,target:this},...t)})),!0):this}emitAsync(e,...t){const i=s.get(this)[e],n=[];return i&&i.length&&i.forEach((i=>{n.push(i({type:e,target:this},...t))})),Promise.all(n)}}let a,r=!1,o=!1;class c{static get supported(){return r="pictureInPictureEnabled"in document,o="webkitSupportsPresentationMode"in HTMLVideoElement.prototype,r||o}static get webkitSupport(){return o}static get chromeSupport(){return r}}class l extends n{constructor(){super(),this.pictureInPictureElement=!1}initVideo(){const e=()=>{this.emit("disabled",0===this.videoEl.readyState||this.videoEl.disablePictureInPicture)};e(),this.videoEl.addEventListener("loadedmetadata",e),this.videoEl.addEventListener("emptied",e)}set video(e){this.videoEl=e,this.initVideo()}init(e){this.video=e,c.webkitSupport?this.initWebkitEvents():this.initChromeEvents()}initWebkitEvents(){document.addEventListener("webkitpresentationmodechanged",(e=>this.onWebkitPresentationChanged(e)),!0)}initChromeEvents(){this.videoEl.addEventListener("enterpictureinpicture",(e=>{a=e.pictureInPictureWindow,this.emit("enterpictureinpicture",a),this.onPipWindowResizeRef=()=>this.onPipWindowResize(),a.addEventListener("resize",this.onPipWindowResizeRef)})),this.videoEl.addEventListener("leavepictureinpicture",(e=>{this.emit("leavepictureinpicture"),a.removeEventListener("resize",this.onPipWindowResizeRef)}))}onWebkitPresentationChanged(e){const t=e.target;"picture-in-picture"==t.webkitPresentationMode?this.emit("enterpictureinpicture",t):document.pictureInPictureElement==t&&this.emit("leavepictureinpicture")}onPipWindowResize(e){this.emit("resize",e)}toggleChromePip(){document.pictureInPictureElement?document.exitPictureInPicture().catch((e=>{this.emit("failed",e)})):this.videoEl.requestPictureInPicture().catch((e=>{this.emit("failed",e)}))}toggleWebkitPip(){!document.pictureInPictureElement&&this.videoEl.webkitSupportsPresentationMode("picture-in-picture")?this.videoEl.webkitSetPresentationMode("picture-in-picture"):this.videoEl.webkitSetPresentationMode("inline")}togglePictureInPicture(){c.webkitSupport?this.toggleWebkitPip():this.toggleChromePip()}}class h extends i{constructor(e,t,i){super(),this._renderingCanvas=e,this._video=t,this._canvasVideo=i,this.pipEnabled=!1}set video(e){this.pipManager&&(this.pipManager.video=e)}init(){const e=this.pipVRVideo=this._canvasVideo,t=new l(e);this.onPipMetadata=()=>{e.removeEventListener("loadedmetadata",this.onPipMetadata),this.pipEnabled&&t.togglePictureInPicture(),this.pipVRVideo.play().catch((e=>{console.log(e)}))};const i=(e,...t)=>{this.emit(e.type,t[0],t[1])};if(t.on("enterpictureinpicture",(e=>{i(e,!0)})).on("leavepictureinpicture",(t=>{this.pipEnabled&&(i(t,!0),e.classList.remove("show"),e.srcObject.getTracks().forEach((e=>e.stop())),this.pipEnabled=!1)})).on("failed",((e,t)=>{i(e,!0,t),this.pipEnabled=!1})),this._video){const e=this.pipManager=new l(this._video);e.on("enterpictureinpicture",(e=>{this.pipEnabled||i(e,!1)})).on("leavepictureinpicture",(e=>{this.pipEnabled||i(e,!1)})).on("failed",((e,t)=>{i(e,!1,t)})).on("disabled",((e,t)=>{i(e,!1,t)})),e.init(this._video)}t.init(e)}requestVRPip(){this.pipEnabled=!0,this.pipVRVideo.classList.add("show"),this.pipVRVideo.addEventListener("loadedmetadata",this.onPipMetadata),this.pipVRVideo.srcObject=this._renderingCanvas.captureStream(30),this.pipVRVideo.play().catch((e=>{console.log(e)}))}togglePictureInPicture(e=!0){e?this.requestVRPip():this.pipManager&&this.pipManager.togglePictureInPicture()}}class u extends i{constructor(e,t){super(),this.init(e,t)}init(e,t){const i=this._video=t;this._canvas=e,this.onPauseRef=()=>{this._legacyFullscreen&&(this.emit("fspause"),this.isPaused=!0)},this.onPlayRef=()=>{this.isPaused&&this._legacyFullscreen&&(this.emit("fsplay"),this.isPaused=!1)},this.onEnterFullScreenRef=()=>{this._legacyFullscreen&&(i.classList.add("show"),this.emit("webkitbeginfullscreen"))},this.onExitFullScreenRef=()=>{this._legacyFullscreen&&(i.classList.remove("show"),i.srcObject&&i.srcObject.getTracks().forEach((e=>e.stop())),document.removeEventListener("webkitfullscreenchange",this.onFullscreenChangeRef),i.removeEventListener("play",this.onPlayRef),i.removeEventListener("pause",this.onPauseRef),i.removeEventListener("webkitbeginfullscreen",this.onEnterFullScreenRef),i.removeEventListener("webkitendfullscreen",this.onExitFullScreenRef),this.emit("webkitendfullscreen"),this._legacyFullscreen=!1)},this.onFullscreenChangeRef=e=>{i.webkitDisplayingFullscreen?this.onEnterFullScreenRef():this.onExitFullScreenRef()},this.onLoadedMetadataRef=()=>{i.play().catch((e=>{console.log(e)})),setTimeout((()=>{i.webkitEnterFullScreen()}),100),i.removeEventListener("loadedmetadata",this.onLoadedMetadataRef)}}requestFullscreen(){this._legacyFullscreen=!0,document.addEventListener("webkitfullscreenchange",this.onFullscreenChangeRef),this._video.addEventListener("play",this.onPlayRef),this._video.addEventListener("pause",this.onPauseRef),this._video.addEventListener("webkitbeginfullscreen",this.onEnterFullScreenRef),this._video.addEventListener("webkitendfullscreen",this.onExitFullScreenRef),this._video.addEventListener("loadedmetadata",this.onLoadedMetadataRef),this._video.classList.add("show"),this._video.srcObject=this._canvas.captureStream(30),this._video.play().catch((e=>{console.log(e)}))}exitFullscreen(){this._video.webkitExitFullScreen()}}
/**
     * @license
     * screenlock-polyfill
     * @author danrossi / https://github.com/danrossi
     * Copyright (c) 2017 Google
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     * http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class d{static get isIOS(){return/iP(hone|ad)/i.test(navigator.platform)||"MacIntel"===navigator.platform&&navigator.maxTouchPoints>1}static requireOrientationPermission(){return void 0!==window.DeviceOrientationEvent&&"function"==typeof window.DeviceOrientationEvent.requestPermission}static requestOrientationPermissions(){return window.DeviceOrientationEvent.requestPermission()}}class p{static get fullScreenAvailable(){return document.fullscreenEnabled||document.mozFullscreenEnabled||document.webkitFullscreenEnabled||document.msFullscreenEnabled}static get isIOS(){return d.isIOS}static get IOSFullscreenAvailable(){return d.isIOS&&this.fullScreenAvailable}static get pipSupported(){return c.supported}static get webkitSupported(){return c.webkitSupport}}const v="requestVideoFrameCallback"in HTMLVideoElement.prototype,m=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,g=window.cancelAnimationFrame||window.mozCancelAnimationFrame;let b;return e.CanvasFullscreen=u,e.CanvasPictureInPicture=h,e.CanvasPipFullscreen=class extends i{constructor(e,t,i=!1){super(),this._canvas=e,this._video=t,this._requiresDom=!1,this._forceFs=i}async init(){return new Promise((e=>{this.initCanvasVideo();const t=p.isIOS,i=p.webkitSupported;p.pipSupported&&this.initPip(),this._requiresDom=i,!t||p.fullScreenAvailable&&!this._forceFs||(this._requiresDom=!0,this._canvasVideo.setAttribute("webkit-playsinline",""),this._canvasVideo.setAttribute("playsinline",""),this._canvasVideo.classList.add("ios"),this.initFullscreen()),e(this._requiresDom)}))}static get pipSupported(){return p.pipSupported}static get fullScreenAvailable(){return p.fullScreenAvailable}get requiresDom(){return this._requiresDom}initCanvasVideo(){const e=this._canvasVideo=document.createElement("video");e.setAttribute("autoplay",!0),e.classList.add("vr-fs")}initPip(){this.canvasPip=new h(this._canvas,this._video,this._canvasVideo);const e=(e,...t)=>{this.emit(e.type,t[0],t[1])};this.canvasPip.on("enterpictureinpicture",e).on("leavepictureinpicture",e).on("failed",e).on("disabled",e),this.canvasPip.init()}initFullscreen(){const e=(e,...t)=>{this.emit(e.type,t[0],t[1])};this.canvasFullScreen=new u(this._canvas,this._canvasVideo,this._video),this.canvasFullScreen.on("webkitbeginfullscreen",e).on("webkitendfullscreen",e).on("fsplay",e).on("fspause",e)}set video(e){this.canvasPip&&(this.canvasPip.video=e)}get canvasVideo(){return this._canvasVideo}togglePictureInPicture(e=!0){this.canvasPip.togglePictureInPicture(e)}requestFullscreen(){this.canvasFullScreen&&this.canvasFullScreen.requestFullscreen()}exitFullscreen(){this.canvasFullScreen&&this.canvasFullScreen.exitFullscreen()}},e.CanvasPipFullscreenUtil=p,e.VideoAnimation=class{constructor(e,t){this.callback=e,this.video=t,this.animationID=null,this.running=!1}setCallback(e){this.callback=e}async animateLegacy(){const e=this.video.currentTime;e>b&&((1/(e-b)).toFixed(),await this.callback(e,{width:this.video.videoWidth,height:this.video.videoHeight})),b=e,this.animationID=m((async()=>await this.animateLegacy()))}async animate(e,t){await this.callback(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initAnimate(){this.animateRef=async(e,t)=>await this.animate(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initLegacyAnimate(){this.animateLegacy()}start(){this.stop(),v?this.initAnimate():(b=new Date,this.initLegacyAnimate()),this.running=!0}stop(){this.running=!1,v?this.animateRef=()=>{}:g(this.animationID&&this.animationID.data&&this.animationID.data.handleId||this.animationID)}},Object.defineProperty(e,"__esModule",{value:!0}),e}({});
